<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Webdings" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse x:Name="btn2" Stroke="White" Fill="#99000000" Visibility="Visible" StrokeThickness="2" />
                        <Ellipse x:Name="btn" Stroke="White" StrokeThickness="2" Visibility="Hidden" >
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0.1,0.1" SpreadMethod="Repeat">
                                    <LinearGradientBrush.Transform>
                                        <TranslateTransform x:Name="trans" X="0" />
                                    </LinearGradientBrush.Transform>
                                    <GradientStop Color="#99ffffff" Offset="0.0" />
                                    <GradientStop Color="#99ffffff" Offset="0.5" />
                                    <GradientStop Color="#99000000" Offset="0.5" />
                                    <GradientStop Color="#99000000" Offset="1.0" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <TextBlock x:Name="txt" Margin="{TemplateBinding Padding}" 
                                       FontFamily="{TemplateBinding FontFamily}" Text="{TemplateBinding Content}" 
                                       Foreground="White" FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn" Property="Fill" Value="#22000000" />

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btn2" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="btn" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation To="50" Duration="00:00:01"
                                                Storyboard.TargetName="trans" Storyboard.TargetProperty="X" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="00:00:01"
                                                Storyboard.TargetName="trans" Storyboard.TargetProperty="X" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btn" Property="Fill" Value="#55000000" />
                            <Setter TargetName="txt" Property="Margin" Value="0,1,0,-1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="White" />
    </Style>
           
        
    
    
    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
    </Style>
    
    <SolidColorBrush x:Key="WindowBackground" Color="#ff000000" />
    <SolidColorBrush x:Key="BorderBackground" Color="Orange" />

    <Style x:Key="ChatDividerStroke" TargetType="{x:Type Rectangle}">
        <Setter Property="Stroke" Value="Magenta" />
        <Setter Property="StrokeThickness" Value="1" />
    </Style>

    
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" Background="{StaticResource WindowBackground}" 
                            Width="{TemplateBinding Width}" BorderThickness="1"
                            BorderBrush="{StaticResource BorderBackground}"
                            Height="{TemplateBinding Height}">
                        <Grid>
                            <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            <!-- TODO: Image pre-download -->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Drag background (!) -->
    <Style x:Key="{x:Type Thumb}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <!-- For drag cap's need back -->
                    <Border Background="#01000000" 
                            BorderBrush="{StaticResource BorderBackground}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <!-- Chat style -->
    <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="LightCoral" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="FontFamily" Value="Courier New" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    
    <!-- Chat fiiiiilll -->
    
    <Style x:Key="NameStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Yellow" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    <Style x:Key="TextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <!--<Setter Property="Margin" Value="0,-2" />-->
    </Style>

    <Style x:Key="TextSmileStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Orange" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <!--<Setter Property="Margin" Value="0,-2" />-->
    </Style>

    <Style x:Key="LinkStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="GreenYellow" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <!--<Setter Property="Margin" Value="-1" />-->
    </Style>

    <!-- выделение в сообщении адресата (его стиль) -->
    <Style x:Key="NameTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <!-- Контейнер содержащий текст, в котором было обращение к стримеру -->
    <Style x:Key="StreamerContainer" TargetType="{x:Type WrapPanel}">
    </Style>
    
    <!-- Контейнер содержащий текст, в котором не было обращения к стримеру -->
    <Style x:Key="NormalTextContainer" TargetType="{x:Type WrapPanel}">
    </Style>

    <Style x:Key="AnimatedCanvas" TargetType="{x:Type Canvas}">
        <Setter Property="Margin" Value="1" />
    </Style>

</ResourceDictionary>
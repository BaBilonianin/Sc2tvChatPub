<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:ctrl="clr-namespace:RatChat.Controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">




    <LinearGradientBrush x:Key="GradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#6AE7E9" Offset="0.0" />
        <GradientStop Color="#122627" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="RatChatBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFD237" Offset="0.0" />
        <GradientStop Color="#F57222" Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="WindowBackground" Color="#aa030303" />
    <SolidColorBrush x:Key="FontForeground" Color="#6AE7E9" />
    <SolidColorBrush x:Key="BorderBackground" Color="#8DC3C5" />


    <!-- Системный стиль, менять НЕ рекомендуется (иначе станет невозможно перетаскивать окно) -->
    <Style TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="#01000000">
                        <Border BorderBrush="#ff2F3B3B"
                                BorderThickness="1" />

                        <Border BorderBrush="{StaticResource BorderBackground}"
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                BorderThickness="2,2,0,0" Width="15" Height="15" />

                        <Border BorderBrush="{StaticResource BorderBackground}"
                                HorizontalAlignment="Right" VerticalAlignment="Top"
                                BorderThickness="0,2,2,0" Width="15" Height="15" />

                        <Border BorderBrush="{StaticResource BorderBackground}"
                                HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                BorderThickness="0,0,2,2" Width="15" Height="15" />

                        <Border BorderBrush="{StaticResource BorderBackground}"
                                HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                BorderThickness="2,0,0,2" Width="15" Height="15" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Системный стиль, менять НЕ рекомендуется (могут стать невидимы сообщения) -->
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Системный стиль, менять НЕ рекомендуется (программа может вылетать) -->
    <Style x:Key="MainWindow" TargetType="Window">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="MinHeight" Value="155" />
        <Setter Property="MinWidth" Value="200" />
    </Style>


    <!-- Стили для всех кнопок (которые в заголовке) -->
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Webdings" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Margin="0,2">
                        <Rectangle x:Name="btn2" Stroke="{StaticResource BorderBackground}" Fill="#99000000" 
                                 Visibility="Visible" StrokeThickness="1" />
                        <Rectangle x:Name="btn" Stroke="{StaticResource BorderBackground}" StrokeThickness="1" 
                                 Visibility="Hidden" >
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0.1,0.1" SpreadMethod="Repeat">
                                    <LinearGradientBrush.Transform>
                                        <TranslateTransform x:Name="trans" X="0" />
                                    </LinearGradientBrush.Transform>
                                    <GradientStop Color="#99ffffff" Offset="0.0" />
                                    <GradientStop Color="#99ffffff" Offset="0.5" />
                                    <GradientStop Color="#99000000" Offset="0.5" />
                                    <GradientStop Color="#99000000" Offset="1.0" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBlock x:Name="txt" Margin="{TemplateBinding Padding}" 
                                       FontFamily="{TemplateBinding FontFamily}" Text="{TemplateBinding Content}" 
                                       Foreground="{StaticResource FontForeground}" FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn" Property="Fill" Value="#22000000" />

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btn2" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="btn" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation To="50" Duration="00:00:01"
                                                Storyboard.TargetName="trans" Storyboard.TargetProperty="X" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="00:00:01"
                                                Storyboard.TargetName="trans" Storyboard.TargetProperty="X" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btn" Property="Fill" Value="#55000000" />
                            <Setter TargetName="txt" Property="Margin" Value="0,1,0,-1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Стиль для чекбоксов (которые в настройках) -->
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="15" Height="15"
                                    Background="White" >
                                <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Stretch="Fill" Margin="2"
                                      x:Name="CheckMark" SnapsToDevicePixels="False"  Stroke="OrangeRed" 
                                      StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" 
                                          TextBlock.Foreground="{StaticResource FontForeground}" 
                                          HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#dddddd" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Стиль для разделителя чатов -->
    <Style x:Key="ChatSplitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="Height" Value="2" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Cursor" Value="ScrollNS" />
        <Setter Property="ShowsPreview" Value="True" />
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Control}" >
                    <Setter Property="Height" Value="2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Fill="White">
                                </Rectangle>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border Background="#88000000" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Стиль для всплывающих подсказок -->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="TextBlock.Foreground" Value="White" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" Background="Black" 
                            Width="{TemplateBinding Width}" BorderThickness="1"
                            BorderBrush="{StaticResource BorderBackground}"
                            Height="{TemplateBinding Height}">
                        <Grid>
                            <ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            <!-- TODO: Image pre-download -->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        Стили текста в чате.
    -->
    <Style x:Key="BaseLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Caviar Dreams" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Background" Value="#77000000" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <TextBlock Text="{TemplateBinding Content}" Margin="-1,-1,1,1"
                                   Foreground="{TemplateBinding Background}" />
                        <TextBlock Text="{TemplateBinding Content}" Margin="1,-1,-1,1"
                                   Foreground="{TemplateBinding Background}" />
                        <TextBlock Text="{TemplateBinding Content}" Margin="-1,1,-1,-1"
                                   Foreground="{TemplateBinding Background}" />
                        <TextBlock Text="{TemplateBinding Content}" Margin="-1,1,1,-1"
                                   Foreground="{TemplateBinding Background}" />
                        <TextBlock Text="{TemplateBinding Content}" Margin="1,0,-1,0"
                                   Foreground="{TemplateBinding Background}" />
                        <TextBlock Text="{TemplateBinding Content}" Margin="-1,0,1,0"
                                   Foreground="{TemplateBinding Background}" />

                        <TextBlock Text="{TemplateBinding Content}" 
                               Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LabelNameStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style x:Key="LabelLinkStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="Foreground" Value="LightGreen" />
        <Setter Property="IsHitTestVisible" Value="True" />
    </Style>

    <Style x:Key="LabelNameTextStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="Foreground" Value="#CCE8E8" />
    </Style>

    <Style x:Key="LabelTextStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <DataTemplate x:Key="SmileStyle2">
        <Image x:Name="smile" Source="{Binding Path=Image}" MaxHeight="20" />
    </DataTemplate>


    <!-- 
        Конец стилей текста в чате.
    -->

    <Style x:Key="MyLabelNameStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="Foreground" Value="LightBlue" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <!-- Стиль для сообщения в чате, можно добавить анимации появления -->
    <DataTemplate x:Key="ChatItem">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Label Content="{Binding Path=Data.Name}" Margin="2,0"
                   Style="{StaticResource MyLabelNameStyle}" />

            <Border Height="1" Background="#ff2F3B3B" Margin="1,0"
                    HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />

            <ContentPresenter x:Name="presenter" Grid.Row="1" Content="{Binding Text}" 
                              Margin="20,0,2,0" >
                <ContentPresenter.RenderTransform>
                    <ScaleTransform x:Name="scale" CenterX="100" CenterY="20" />
                </ContentPresenter.RenderTransform>
            </ContentPresenter>
        </Grid>

        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="ScaleX" 
                                             Storyboard.TargetName="scale"
                                            From="4" To="1"
                                            Duration="0:0:00.4">

                            </DoubleAnimation>

                            <DoubleAnimation Storyboard.TargetProperty="ScaleY" 
                                             Storyboard.TargetName="scale"
                                            From="4" To="1"
                                            Duration="0:0:00.4">

                            </DoubleAnimation>


                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                             Storyboard.TargetName="presenter"
                                            From="0" To="1"
                                            Duration="0:0:00.4">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Стиль для счетчика пек и прочего -->
    <DataTemplate x:Key="AchievmentStyle">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="1">
            <TextBlock Foreground="{StaticResource GradientBrush}" Text="Peka's count: " FontWeight="Bold" />
            <TextBlock Foreground="#FBD043" Text="{Binding Path=PekaCount}" Margin="1,0"/>

            <TextBlock Foreground="{StaticResource GradientBrush}" Text=", Temp: " FontWeight="Bold" />
            <TextBlock Foreground="#FBD043" Text="{Binding Path=Temperature, StringFormat={}{0:0.0}°C}" Margin="1,0"/>

            <TextBlock Foreground="{StaticResource GradientBrush}" Text=", Днометр: " FontWeight="Bold" />
            <TextBlock Foreground="#FBD043" Text="{Binding Path=Depth, StringFormat={}{0:0}m}" Margin="1,0"/>
        </StackPanel>
    </DataTemplate>

    <!-- Контейнер содержащий текст, в котором было обращение к стримеру -->
    <Style x:Key="StreamerContainer" TargetType="{x:Type WrapPanel}">
        <Setter Property="Background" Value="#32ffffff" />
    </Style>

    <!-- Контейнер содержащий текст, в котором не было обращения к стримеру -->
    <Style x:Key="NormalTextContainer" TargetType="{x:Type WrapPanel}">
    </Style>

    <!-- Текст в окне настройки -->
    <Style x:Key="ConfigText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="2,0" />
    </Style>

    <!-- Стиль точки на графике голосовалки -->
    <Style x:Key="PollBarStyle" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="{StaticResource GradientBrush}" />
        <Setter Property="Foreground" Value="Blue" />
    </Style>






    <Style x:Key="ChatHeader" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource RatChatBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>





    <!-- Полоса прокрутки -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{StaticResource BorderBackground}" Width="6" CornerRadius="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Полоса прокрутки -->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Border Grid.RowSpan="3" CornerRadius="2" Width="2" Background="{StaticResource GradientBrush}" HorizontalAlignment="Center" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <!-- Полоса прокрутки -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <!-- Да зачем нам дизайнерить то что никто никогда не увидит? -->
                <!--<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />-->
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="15"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

   


    <!-- Настройки -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,0,-1"
                                  IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1" Background="Black" />
                        <Border Name="Border" Grid.Row="1" BorderBrush="Black" BorderThickness="1" 
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2" >
                            <ContentPresenter Name="PART_SelectedContentHost"             
                                              ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888888" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="0,0,-4,0" 
                                Background="Black" BorderBrush="White" 
                                BorderThickness="1,0,1,0" >
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" 
                                              HorizontalAlignment="Center" ContentSource="Header" 
                                              Margin="12,2,12,2" TextBlock.Foreground="White" 
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="Black" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!-- Стиль заголовка для контенеров (для чата или голосовалки) -->
    <Style x:Key="LabelHeaderStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource RatChatBrush}" />
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0,0" />
        <Setter Property="FontFamily" Value="Courier New" />
        <Setter Property="IsHitTestVisible" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Margin="0" Padding="0">
                        <TextBlock Text="{TemplateBinding Content}" Margin="3,0"
                                   Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!-- Контейнер для голосовалки или для прочих плагинов -->
    <Style x:Key="CustomControlContainerStyle" TargetType="UserControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="UserControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>


                        <Label Content="{Binding Source.Header}" 
                                Grid.Row="0" IsHitTestVisible="False" 
                                Style="{StaticResource LabelHeaderStyle}" />

                        <ContentPresenter x:Name="PART_Content" Grid.Row="1" Margin="1"
                                          Content="{Binding CustomContent}" />

                        <StackPanel x:Name="headerButtons" Opacity="0.0" Grid.Row="0" Orientation="Horizontal" 
                                    Height="18" HorizontalAlignment="Right">
                            <Button x:Name="PART_OptionsButton" Width="18" Margin="1,0" 
                                    ToolTip="Настройки" Content="~" HorizontalAlignment="Left" />
                            <Button x:Name="PART_CloseButton" Width="18" Margin="1,0" 
                                    ToolTip="Закрыть" Content="r" HorizontalAlignment="Right" />
                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.0" Duration="00:00:00.4" 
                                                     Storyboard.TargetName="headerButtons" 
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.0" Duration="00:00:00.4" 
                                                     Storyboard.TargetName="headerButtons" 
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Контейнер для чата -->
    <Style x:Key="VisualChatStyle" TargetType="UserControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="UserControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Label x:Name="PART_Header" Content="{Binding Header}" 
                                Grid.Row="0" IsHitTestVisible="False" 
                                Style="{StaticResource LabelHeaderStyle}" />

                        <ListBox x:Name="PART_Messages" Grid.Row="1" 
                                ItemsSource="{Binding}" Margin="1" 
                                ItemTemplate="{DynamicResource ChatItem}"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                ScrollViewer.CanContentScroll="False"
                                Template="{DynamicResource SystemChatContent}">
                        </ListBox>

                        <StackPanel x:Name="headerButtons" Opacity="0.0" Grid.Row="0" Orientation="Horizontal" 
                                    Height="18" HorizontalAlignment="Right">
                            <Button x:Name="PART_OptionsButton" Width="18" Margin="1,0" 
                                    ToolTip="Настройки" Content="~" HorizontalAlignment="Left" />
                            <Button x:Name="PART_CloseButton" Width="18" Margin="1,0" 
                                    ToolTip="Закрыть" Content="r" HorizontalAlignment="Right" />
                        </StackPanel>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1.0" Duration="00:00:00.4" 
                                                     Storyboard.TargetName="headerButtons" 
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.0" Duration="00:00:00.4" 
                                                     Storyboard.TargetName="headerButtons" 
                                                     Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>